#include <SFML/Graphics.hpp>
#include <functional> 
#include <cmath> 
#include <string>
#include <iostream> 
#include <locale> 

// Функция для отрисовки графика
void drawGraph(sf::RenderWindow& window, std::function<float(float)> func, float xMin, float xMax, float scaleX, float scaleY, sf::Color color) {
    sf::VertexArray graph(sf::LinesStrip);
    for (float x = xMin; x <= xMax; x += 0.1f) {
        float y = func(x); // Вычисление значения функции
        // Преобразование координат в экранные
        float screenX = 400 + x * scaleX;
        float screenY = 300 - y * scaleY;
        // Добавление точки в массив вершин
        graph.append(sf::Vertex(sf::Vector2f(screenX, screenY), color));
    }
    window.draw(graph);
}

int main() {
    std::locale::global(std::locale(""));
    // Создание окна
    sf::RenderWindow window(sf::VideoMode(800, 600), "Приложение для вывода графиков");

    // Переменная для хранения пользовательской точки
    sf::CircleShape userPoint(5); // Радиус 5 пикселей
    userPoint.setFillColor(sf::Color::Red);
    bool userPointExists = false; // Переменная для проверки существования пользовательской точки

    // Загрузка шрифта
    sf::Font font;
    if (!font.loadFromFile("C:/Windows/Fonts/arial.ttf")) {
    }

    // Текст для отображения координат точки и области
    sf::Text coordinatesText;
    coordinatesText.setFont(font);
    coordinatesText.setCharacterSize(20);
    coordinatesText.setFillColor(sf::Color::White);
    coordinatesText.setPosition(10, 10);

    sf::Text regionText;
    regionText.setFont(font);
    regionText.setCharacterSize(20);
    regionText.setFillColor(sf::Color::White);
    regionText.setPosition(10, 40);

    // Оси X и Y
    sf::VertexArray xAxis(sf::Lines, 2);
    xAxis[0].position = sf::Vector2f(50, 300); // Начало оси X
    xAxis[0].color = sf::Color::White; // Цвет оси
    xAxis[1].position = sf::Vector2f(750, 300); // Конец оси X
    xAxis[1].color = sf::Color::White;

    sf::VertexArray yAxis(sf::Lines, 2);
    yAxis[0].position = sf::Vector2f(400, 50); // Начало оси Y
    yAxis[0].color = sf::Color::White; // Цвет оси
    yAxis[1].position = sf::Vector2f(400, 550); // Конец оси Y
    yAxis[1].color = sf::Color::White;

    while (window.isOpen()) {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed)
                window.close();

            // Проверка клика мышью
            if (event.type == sf::Event::MouseButtonPressed) {
                if (event.mouseButton.button == sf::Mouse::Left) {
                    // Получение позиции клика
                    sf::Vector2i mousePos = sf::Mouse::getPosition(window);

                    // Преобразование экранных координат в "математические"
                    float mathX = (mousePos.x - 400) / 30.0f; // Масштаб 30 по X
                    float mathY = -(mousePos.y - 300) / 30.0f; // Масштаб 30 по Y 

                    // Установка новой пользовательской точки
                    userPoint.setPosition(mousePos.x - userPoint.getRadius(), mousePos.y - userPoint.getRadius());
                    userPointExists = true; // Помечаем, что точка существует

                    // Логика проверки точки
                    std::string region = "";

                    // Проверка на границу
                    if (std::abs(mathY - 3) < 0.1f || std::abs(mathY - std::abs(mathX)) < 0.1f) {
                        region = "Граница";
                    }
                    // Проверка областей
                    else if (mathY > 3 && mathY > std::abs(mathX)) {
                        region = "Зона 2"; 
                    }
                    else if (mathY > 3 && mathY < std::abs(mathX)) {
                        if (mathX < 0) {
                            region = "Зона 3"; 
                        }
                        else {
                            region = "Зона 4"; 
                        }
                    }
                    else if (mathY < 3 && mathY < std::abs(mathX)) {
                        region = "Зона 5"; 
                    }
                    else if (mathY < 3 && mathY > std::abs(mathX)) {
                                                
                            region = "Зона 1";
                                                
                    }

                    // Обновление текста с координатами точки и областью
                    coordinatesText.setString("Координаты: (" +
                        std::to_string(mathX).substr(0, 4) + ", " +
                        std::to_string(mathY).substr(0, 4) + ")");
                    regionText.setString("Область: " + region);
                }
            }
        }

        // Очистка экрана
        window.clear(sf::Color::Black);

        // Отрисовка осей
        window.draw(xAxis);
        window.draw(yAxis);

        // Отрисовка графиков
        drawGraph(window, [](float x) { return 3; }, -10, 10, 30, 30, sf::Color::Blue); // y1 = 3
        drawGraph(window, [](float x) { return std::abs(x); }, -10, 10, 30, 30, sf::Color::Red); // y2 = |x|

        // Отрисовка пользовательской точки, если она существует
        if (userPointExists) {
            window.draw(userPoint);
            window.draw(coordinatesText);
            window.draw(regionText);
        }

        // Отображение нового кадра
        window.display();
    }

    return 0;
}
